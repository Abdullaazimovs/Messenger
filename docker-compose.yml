version: '3.8'

services:
  web:
    build: .
    command: uvicorn config.asgi:application --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
      - ./static:/app/static
      - ./staticfiles:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - db
    environment:
      - DEBUG=1
      - SECRET_KEY=django-insecure-g0qr@eb69k1dz1nb1075*!n*s%#aq=t0(%bs@-exii16zcz75b
      - DJANGO_ALLOWED_HOSTS=*
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    networks:
      - app-network

  daphne:
    build: .
    command: daphne -b 0.0.0.0 -p 8001 config.asgi:application
    volumes:
      - .:/app
      - ./static:/app/static
      - ./staticfiles:/app/staticfiles
    ports:
      - "8001:8001"
    depends_on:
      - redis
      - db
    environment:
      - DEBUG=1
      - SECRET_KEY=django-insecure-g0qr@eb69k1dz1nb1075*!n*s%#aq=t0(%bs@-exii16zcz75b
      - DJANGO_ALLOWED_HOSTS=*
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    networks:
      - app-network

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: